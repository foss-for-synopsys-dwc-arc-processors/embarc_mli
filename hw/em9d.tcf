<?xml version="1.0" encoding="UTF-8"?>
<config_list>
  <tool_config version="1.0.71" mwdt_version="O-2018.06" />
  <configuration name="BCRs" filename="bcr_contents.txt">
    <string><![CDATA[
	0x4	0x44		IDENTITY
	0x18	0x800000	AUX_DCCM
	0x60	0x2		BCR_VER
	0x68	0x10		VECBASE_AC_BUILD
	0x6e	0x102		RF_BUILD
	0x74	0x10b04		DCCM_BUILD
	0x75	0x10104		TIMER_BUILD
	0x78	0xb04		ICCM_BUILD
	0x79	0x4620		XY_BUILD
	0x7a	0x3521		DSP_BUILD
	0x7b	0x22206		MULTIPLY_BUILD
	0x7c	0x3		SWAP_BUILD
	0x7d	0x3		NORM_BUILD
	0x7e	0x2		MINMAX_BUILD
	0x7f	0x303		BARREL_BUILD
	0xc1	0x12427202	ISA_CONFIG
	0xcb	0x2		BS_BUILD
	0xcc	0x1988c02	AGU_BUILD
	0xcd	0xa1002		DMAC_BUILD
	0xf1	0x1		CORE_CONFIG
	0xf3	0x1070a01	IRQ_BUILD
	0x208	0x0		AUX_ICCM
	0x5f8	0xc00000	XCCM_BASE
	0x5f9	0xe00000	YCCM_BASE
]]></string>
  </configuration>
  <configuration name="build_version_info" filename="build_version_info.txt">
    <string><![CDATA[
Version Information:
    ARChitect O-2018.09
    IP Libraries:
        ARCv2EM            v5.1.3
        ARC Debug          v2.1.9
        ARC xCAM           v4.3.7
        ARCv2EM_CCT        v5.1.3
        ARCv2MSS           v2.2.9
        Implementation     v5.1.3
        Tool Configuration  v1.0.71
]]></string>
  </configuration>
  <configuration name="mw_compiler" filename="ccac.arg">
    <string><![CDATA[
	-arcv2em
	-core4
	-HL
	-Hpc_width=24
	-Xunaligned
	-Xcode_density
	-Xdiv_rem=radix2
	-Xswap
	-Xbitscan
	-Xmpy_option=mpyd
	-Xshift_assist
	-Xbarrel_shifter
	-Xdsp2
	-Xdsp_complex
	-Xdsp_divsqrt=radix2
	-Xdsp_itu
	-Xdsp_accshift=full
	-Xagu_large
	-Xxy
	-Xxy_config=dccm_x_y
	-Xbitstream
	-Xtimer0
	-Hccm
	-Xdmac
]]></string>
  </configuration>
  <configuration name="mw_debugger" filename="mdb.arg">
    <string><![CDATA[
	-arcv2em 
	-core4 
	-rgf_num_banks=1 
	-rgf_num_wr_ports=2 
	-pc_width=24 
	-addr_size=24 
	-Xunaligned 
	-Xcode_density 
	-Xdiv_rem=radix2 
	-Xswap 
	-Xbitscan 
	-Xmpy_option=mpyd 
	-Xshift_assist 
	-Xbarrel_shifter 
	-Xdsp2 
	-Xdsp_complex 
	-Xdsp_divsqrt=radix2 
	-Xdsp_itu 
	-Xdsp_accshift=full 
	-Xagu_large 
	-Xagu_wb_depth=4 
	-Xagu_accord 
	-Xxy 
	-Xxy_config=dccm_x_y 
	-Xxy_size=64K 
	-Xxy_interleave 
	-Xxy_x_base=0xc00000 
	-Xxy_y_base=0xe00000 
	-Xbitstream 
	-Xtimer0 
	-Xtimer0_level=1 
	-interrupts=10 
	-interrupt_priorities=2 
	-ext_interrupts=7 
	-interrupt_base=0x0 
	-dccm_size=0x80000 
	-dccm_base=0x00800000 
	-dccm_interleave 
	-iccm0_size=0x80000 
	-iccm0_base=0x00000000 
	-dmac 
	-dmac_channels=1 
	-dmac_registers=1 
	-dmac_fifo_depth=2 
	-dmac_int_config=single_internal 
]]></string>
  </configuration>
  <configuration name="nSIM" filename="nsim.props">
    <string><![CDATA[
	nsim_isa_family=av2em
	nsim_isa_core=4
	arcver=0x44
	nsim_isa_rgf_num_banks=1
	nsim_isa_rgf_num_regs=32
	nsim_isa_rgf_num_wr_ports=2
	nsim_isa_big_endian=0
	nsim_isa_lpc_size=32
	nsim_isa_pc_size=24
	nsim_isa_addr_size=24
	nsim_isa_unaligned_option=1
	nsim_isa_code_density_option=2
	nsim_isa_div_rem_option=1
	nsim_isa_swap_option=1
	nsim_isa_bitscan_option=1
	nsim_isa_mpy_option=8
	nsim_isa_shift_option=3
	nsim_isa_dsp_option=2
	nsim_isa_dsp_complex_option=1
	nsim_isa_dsp_divsqrt_option=1
	nsim_isa_dsp_itu_option=1
	nsim_isa_dsp_accshift_option=2
	nsim_isa_agu_size=large
	nsim_isa_agu_wb_depth=4
	nsim_isa_agu_accord=1
	nsim_isa_xy=1
	nsim_isa_xy_config=dccm_x_y
	nsim_isa_xy_size=64K
	nsim_isa_xy_interleave=1
	nsim_isa_xy_x_base=0xc00000
	nsim_isa_xy_y_base=0xe00000
	nsim_isa_bitstream_option=1
	nsim_isa_enable_timer_0=1
	nsim_isa_timer_0_int_level=1
	nsim_isa_number_of_interrupts=10
	nsim_isa_number_of_levels=2
	nsim_isa_number_of_external_interrupts=7
	nsim_isa_intvbase_preset=0x0
	dccm_size=0x80000
	dccm_base=0x00800000
	nsim_isa_dccm_interleave=1
	iccm0_size=0x80000
	iccm0_base=0x00000000
	nsim_isa_dmac_option=1
	nsim_isa_dmac_channels=1
	nsim_isa_dmac_registers=1
	nsim_isa_dmac_fifo_depth=2
	nsim_isa_dmac_int_config=single_internal
]]></string>
  </configuration>
  <configuration name="IDE" filename="ide.props">
    <string><![CDATA[
	processor.family=4
	processor.core_version=4
	processor.family_name=arcv2em
	processor.rgf_num_banks=1
	processor.rgf_num_wr_ports=2
	processor.endian=little
	processor.lpc_size=32
	processor.pc_size=24
	processor.addr_size=24
	processor.Xunaligned=1
	processor.Xcode_density=1
	processor.Xdiv_rem=radix2
	processor.Xswap=1
	processor.Xbitscan=1
	processor.Xmpy_option=mpyd
	processor.Xshift_assist=1
	processor.Xbarrel_shifter=1
	processor.Xdsp2=1
	processor.Xdsp_complex=1
	processor.Xdsp_divsqrt=radix2
	processor.Xdsp_itu=1
	processor.Xdsp_accshift=full
	processor.Xagu_large=1
	processor.Xagu_wb_depth=4
	processor.Xagu_accord=1
	processor.Xxy=1
	processor.Xxy_config=dccm_x_y
	processor.Xxy_size=64K
	processor.Xxy_interleave=1
	processor.Xxy_x_base=0xc00000
	processor.Xxy_y_base=0xe00000
	processor.Xbitstream=1
	processor.Xtimer0=1
	processor.Xtimer0_level=1
	processor.interrupts=10
	processor.interrupt_priorities=2
	processor.ext_interrupts=7
	processor.interrupt_base=0x0
	processor.dccm_size=0x80000
	processor.dccm_base=0x00800000
	processor.dccm_interleave=1
	processor.Hccm=1
	processor.iccm0_size=0x80000
	processor.iccm0_base=0x00000000
	processor.dmac=1
	processor.dmac_channels=1
	processor.dmac_registers=1
	processor.dmac_fifo_depth=2
	processor.dmac_int_config=single_internal
]]></string>
  </configuration>
  <configuration name="architect" filename="build_configuration.txt">
    <string><![CDATA[
######## project16 --- com.arc.templates.project.em9d_voice_audio.1_0 ########

# BuildHTMLDocs --- Creates custom HTML documentation in the 'docs' directory.
-build_html_docs false

# BuildSoftware --- Creates software under the Software directory.
-build_software false

# BuildTestCode --- Creates test source code under the 'tests' directory.
-build_test_code false

# BuildScripts --- Creates synthesis scripts and configuration files, which are required for hierarchy generation.
-build_scripts false

# BuildHDL --- Creates the behavioural and synthesisable HDL source code.
-build_hdl true

# CompileTestCode --- Compiles and assembles the test code.
-compile_test_code false

# GenerateStructuralHDL --- Generate the necessary structural HDL
-generate_structural_hdl true

# CompileForHDLSimulation --- Compile the HDL ready for simulation, using the selected Simulator.
-compile_hdl_for_simulation false

# BuildXCAM --- 
# When true, build the XCAM cycle accurate model from HDL.
# This happens only when the VTOC component (in the XCAM library) has been added to the design.
# 
-build_xcam true

# RunARCsyn --- Synthesize design using ARCsyn
-run_arcsyn false

# RunSEIF --- Run Synopsys Embedit Integrator Flow to generate configured memory instances
-run_seif false

# RunARCrams --- Run ARCrams on the current build, this will stitch in vendor supplied RAM models and update the synthesis and simulation environment to use the models.
-run_arcrams false

# RunARCformal --- Formal Verification using ARCformal
-run_arcformal false

# RunARCpower --- Run the Power Analysis using RTL simulation to derive the activity
-run_arcpower false

# compile_iss_user_extensions --- Build ISS extensions for any APEX components in the current design using their C Models.
-compile_iss_user_extensions false

# compile_translated_iss_extensions --- Converts APEX extensions from Verilog to C++ and compiles the model for the ISS.
-compile_translated_iss_extensions false

# compile_nsim_user_extensions --- Build nSIM extensions for any APEX components in the current design using their C Models.
-compile_nsim_user_extension false

# compile_translated_nsim_extensions --- Converts APEX extensions from Verilog to C++ and compiles the model for nSIM.
-compile_translated_nsim_extensions false


######## System --- com.arc.hardware.System.1_0 ########

# Create System
-create com.arc.hardware.System.1_0 System

# Testbench --- 
# Only the rascal testbench is supported, and is required by ARCtest.
# 	
-testbench rascal

# SynthesisLevel --- 
# Sets the top level module name for synthesis.  
# 
# If not using core_sys: for single-core designs, cpu_isle is used; for multicore designs, archipelago is used.
# 	
-synthesislevel cpu_isle/archipelago

# GateLevelSim --- When selected the gate level sim test code and scripts would be installed to run ARCgatesim
-gatesim true

# UserLibraryName --- The name for your HDL library
-library_name user

# OPTION_SimulatorName --- The name of the simulator you wish to use
-simulator vcs

# sim64 --- When selected, the 64-bit version of the simulator is used.  Be sure you have the 64-bit-capable simulator installed  and $ARCHITECT_ROOT/lib/linux_x86_64/ added to your LD_LIBRARY_PATH.
# The setting of this option affects the content of the generated makefile_interface_*_verilog, where * is the simulator name.
-sim64 false

# verilog_2001 --- Enable Verilog 2001 file-io syntax (if false: use pli)
-verilog_2001 true

# export_srams_to --- Where to place srams, if not cpu_top
-export_srams_to none

# copy_prefix --- 
# A Copy Prefix P causes creation of a separate copy of the entire Verilog build where each Verilog filename, module, and `define is prefixed with P and copied to a separate directory named P.
# 	
-copy_prefix ""


######## ARCv2EM CCT --- cct.1_0 ########

# Create ARCv2EM CCT
-create cct.1_0 "System.ARCv2EM CCT"

# cct --- 
# 	Option used to add a CCT to the design for command-line builds
# 	Without this architect can't add this component to a build
# 	via a cmdline -create command.  
# 	with old scripts.
# 	
-cct true

# no_hostlink --- 
# This prevents the inclusion of the hostlink library when compiling
# C or C++ programs.  The resultant executable, if it contains printfs,
# will print to an internal fixed buffer __mwwrite_buf.  
# Other hostlink operations that require debugger assistance, such as file
# opens, will fail.
# 
# Hostlink references incur memory cycles at unpredictable times and 
# so can perturb cycle-timing results.  Without hostlink,
# the debugger will not in any way interfere with the target while it is running.  
# Therefore this option is useful for simulation in which you want precisely the
# same cycle timing to occur each time you run, or for accurate power consumption results.
# 	
-cct_no_hostlink false

# has_subsystem_cct_flow --- 
# The above option will check for the presence of subsystem component in the build configuration and suitably modifies the Makefile for the sub-system environment.
# 	
-has_subsystem_cct_flow false


######## BusFabric --- com.arc.hardware.ARCv2MSS.BusFabric.1_0 ########

# Create BusFabric
-create com.arc.hardware.ARCv2MSS.BusFabric.1_0 System.BusFabric

# alb_mss_fab_ahb_b2b --- This option is used to choose selcet two ahb-lite slave implementationsWhen selecting true, ahb-lite slave can support back2back transaction for ahb-lite burst. 
-alb_mss_fab_ahb_b2b true

# alb_mss_fab_def_div2ref --- This specifies the clock division factor at reset. It is used for mss clock controller to generate mss fabric clock, and the value N means mss fabric is running at (1/N) x ref_clk.
-alb_mss_fab_def_div2ref 1

# alb_mss_fab_lat --- This specifies the maximum latency in the master latency units.
-alb_mss_fab_lat 0

# alb_mss_fab_def_lat --- This specifies the latency after reset for the master latency units.
-alb_mss_fab_def_lat 0

# alb_mss_fab_def_wr_bw --- This specifies the write channel bandwidth parameter after reset for the master bandwidth control units.
-alb_mss_fab_def_wr_bw 0

# alb_mss_fab_def_rd_bw --- This specifies the read channel bandwidth parameter after reset for the master bandwidth control units.
-alb_mss_fab_def_rd_bw 0

# alb_mss_ccm_base --- This specifies the base address at which the ICCM and DCCM DMIs will be placed in the memory map. The address should be divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_ccm_base 0x4_0000


######## CPUisle --- com.arc.hardware.CPU_isle.1_0 ########

# Create CPUisle
-create com.arc.hardware.CPU_isle.1_0 System.CPUisle

# unique_name --- verilog module modifier prefix
-unique_name ""

# ArcNum --- The processor number as read back in the ARCNUM field of the IDENTITY register.
-arc_num 0

# instances --- 
# The number of instantiations of this core.
# 
-instances 1

# instance_signal_prefix --- 
# [arc_dev] Specifies the prefix used for each instance, when multiple instances are created.  If N is in the text, N is replaced by the instance number; otherwise the instance number is appended.
# 
-instance_signal_prefix c

# skip_vpp --- 
# This is a secret option, not seen by customers.
# If you check this, we won't VPP most of the *.vpp files.
# This can speed up re-build if you've already built them and not
# changed the core options.
# Use at your own risk.
# 	
-skip_vpp false

# OPTION_remove_tmpdir --- 
# This is a secret option, not seen by customers.
# If you uncheck this, we'll leave in place the temporary directory in which RTL is generated to support unique_name.
# 	
-remove_tmpdir true

# CPUFloorplan --- Floorplan giving relative placement of the RAMs  for the given configuration of ARCv2HS or ARCv2EM in this CPUisle
-cpu_floorplan none

# userCPUFloorplanPath --- Pathname of user floorplan for the CPU when using a hierarchical implementation
-usercpufloorplan_path ""

# pinLocationConstraintsFile --- Pathname+filename of the physical pin location constraints file or just "side1" (all pins on l.h.s) or "side2" (pins on top only) or "side3" (pins on r.h.s. only) or "side4" (pins on bottom only) to get a template file generated
-pin_location_constraints_file ""


######## ARCv2EM --- com.arc.hardware.ARCv2EM.1_0 ########

# Create ARCv2EM
-create com.arc.hardware.ARCv2EM.1_0 System.CPUisle.ARCv2EM

# arcv2em --- Description to follow
-arcv2em true

# def_div2ref --- This specifies the clock division factor at reset. It is used for mss clock controller to generate core clock, and the value N means core is running at (1/N) x ref_clk.
-def_div2ref 1

# addr_size --- This defines the address bus width (in bits).
-addr_size 24

# pc_size --- This defines the program counter (in bits).
-pc_size 24

# lpc_size --- This defines the size of the loop counter (in bits).
-lpc_size 32

# halt_on_reset --- This defines whether the core is halted initially on reset.
-halt_on_reset true

# byte_order --- This defines the endianness of the core.
-byte_order little

# sep_option --- Enable PC/RF and other key register protection for SEP.
-sep_option false

# code_density_option --- This reduces the size of program memory by adding instructions that condense commonly used instruction patterns with some marginal increase in processor gate count. The added instructions are ENTER_S, LEAVE_S, JLI_S, BI, BIH.
-code_density_option true

# bitscan_option --- This adds instructions for efficient search of bits within a 32 bit word, including normalize (NORM, NORMH, NORMW) and find first or last set bit (FFS, FLS) instructions.
-bitscan_option true

# shift_option --- The Shift ISA option adds variable and multi-length shift rotation instructions:  (0) No shift/rotation instructions (1) ASR16, ASR8, LSR8, LSL8, ROL8, ROR8 (2) ASRM, ASLM, LSRM, RORM (3) ASR16, ASR8, LSR8, LSL8, ROL8, ROR8, ASRM, ASLM, LSRM, RORM
-shift_option 3

# swap_option --- This adds two instructions used to swap half-words or bytes in a 32b word. Useful for converting between little to big endianess and vice-versa.
-swap_option true

# div_rem_option --- The DIV/REM option adds non-blocking multi-cycle implementation of integer divide/remainder functions. Added instructions are DIV, DIVU (integer divide), REM and REMU (integer divide remainder).radix2 takes 33 cycles.  radix4_enhanced takes 3 to 19 cycles per operation.
-div_rem_option none

# mpy_option --- The Multiplier ISA option allows selection between several multiplier configurations to tradeoff performance with silicon area.
# For select multiply options, when the DIV/REM option is also selected, some datapath resources will be shared between the multiply and divide pipeline to minimize total area.
# 
# Cycle count (16-bit, lower 32-bit or upper 32-bit) for the different configurations is as follows:
# <pre>
# 
# option  16/L32/U32  Instructions
# ------  ----------  ---------------------
#       
# none	  -/-/-     None
# wlh1	  1/1/1     MPYW/U, MPY/U, MPYH/U
# wlh2	  2/2/2     MPYW/U, MPY/U, MPYH/U
# wlh3	  2/3/3     MPYW/U, MPY/U, MPYH/U
# wlh4	  2/4/5     MPYW/U, MPY/U, MPYH/U
# wlh5	  5/9/9     MPYW/U, MPY/U, MPYH/U
# </pre>
# 
-mpy_option none

# code_protection --- The ARC EM architecture divides the memory into 16 regions, which can be protected individually.  This feature adds a 16-bit input to the processor core, one bit per region. When the protect bit is set, the processor disables any load or store to the corresponding region.  An attempt to access a protected region raises an EV_ProtV exception.
-code_protection false

# stack_checking --- Stack checking is a mechanism for checking stack accesses and raising an exception when a stack overflow or underflow is detected.
-stack_checking false

# unaligned_option --- This enables unaligned loads and stores.
-unaligned_option true

# intvbase_preset --- This sets the interrupt vector base configuration register, VECBASE_AC_BUILD. The vector base address is aligned to a 1KB boundary, so the required address value should be divided by 1K (i.e. do not include the lower 10 bits). On reset, this register is loaded into the interrupt vector base address register, INT_VECTOR_BASE.
-intvbase_preset 0x0

# intvbase_preset_s --- This sets the secure interrupt vector base configuration register, VECBASE_AC_BUILD. The vector base address is aligned to a 1KB boundary, so the required address value should be divided by 1K (i.e. do not include the lower 10 bits). On reset, this register is loaded into the interrupt vector base address register, INT_VECTOR_BASE_S.This is effective only when 2+2 mode is enabled.
-intvbase_preset_s 0x0

# intvbase_ext --- Set this option to drive the upper 22 bits of the interrupt base vector externally, into signal intvbase_in.
-intvbase_ext false

# nmi_option --- add Non-maskable external exception support
-nmi_option false

# rgf_impl --- This defines whether the register file is implemented using flip-flops, or with a hard macro.
-rgf_impl flip_flops

# rgf_num_regs --- This defines the size (in 32b register) of the processor register file.
-rgf_num_regs 32

# rgf_wr_ports --- This defines the number of write ports on the register file.
-rgf_wr_ports 2

# rgf_num_banks --- Dual register banks are useful if Fast IRQ has been configured, but may be selected even if not.
-rgf_num_banks 1

# rgf_banked_regs --- This selects the number of registers that are replicated in the second register-file bank.
-rgf_banked_regs 32

# turbo_boost --- This enables the Turbo Boost synthesis option. By enabling this option, the achievable clock frequency is increased, but at the cost of an additional cycle latency on branch instructions.
-turbo_boost false

# infer_alu_adder --- infer: datapath is described as behavioral code: A + B
# instantiate: datapath is instantiated as a detailed multi-stage code of a carry-lookahead adder.  It is generally preferable to use the infer option and add directives for your target synthesizer. 
-infer_alu_adder infer

# infer_mpy_wtree --- infer: datapath is described as behavioral code: A * B (applies to only wlh3, wlh4 and wlh5 designs)
# instantiate: datapath is instantiated as a detailed multi-stage code of a Wallace Tree multiplier It is generally preferable to use the infer option and add directives for your target synthesizer. 
-infer_mpy_wtree instantiate

# scantest_ram_bypass_mux --- This mux is used to make logic trapped between flops and memory (aka shadow logic) to be covered by scantest without requiring advanced sequential ATPG on the memory to be applied. Will add delay to functional access time
-scantest_ram_bypass_mux false

# logic_bist --- This option will OR LBIST_EN with test_mode
-logic_bist false

# power_domains --- Adds three separate power domains to the core, and propagates power-gate control signals to the top level of the core. Also generates UPF constraints and commands in the low-power scripts
-power_domains false

# dvfs --- Adds logic to the core to allow dynamic controlling of voltage and frequency and propagates the associated control signals to the top level of core
-dvfs false

# voltage_domains --- Creates a voltage  domain split between RAM and std cell parts to support Ultra Low Voltage on cells and generates UPF constraints
-voltage_domains false

# mem_bus_option --- The core supports two bus protocols for accessing external memory: AHB & AHB-Lite. AHB-Lite-single means instruction fetch and data access share a single AHB-Lite port. AHB-Lite-dual means separate AHB-Lite port for each initiator if present.
-mem_bus_option AHB-Lite-dual

# mem_bus_reg_interface --- Specifies whether the memory bus interface is registered.
-mem_bus_reg_interface true

# dmi_burst_option --- This will enable high-throughput burst support on the DMI slave interfaces. By enabling this option, the peak DMI read throughput goes from 1 word per 3 cycles to N words per N+2 cycles, in which N is the AHB burst lengthDMI write throughput goes from 1 word per 3 cycles to 1 word per cycle.
-dmi_burst_option false

# has_dmp_peripheral --- This option enables the redirection of load/store accesses to one segment (1/16) of the addressable space to a dedicated peripheral bus. This offers high system integration and reduces overall system cost.
-has_dmp_peripheral false

# per0_base --- This option specifies the memory region assignment for this peripheral aperture
-per0_base 15

# per0_limit --- This option specifies the end of this peripheral aperture
-per0_limit 0

# per_bus_option --- The core supports one bus protocol for accessing the peripheral space, when enabled: AHB-Lite.
-per_bus_option AHB-Lite

# per_bus_reg_interface --- Specifies whether the peripheral bus interface is registered.
-per_bus_reg_interface false

# clock_gating --- This enables the insertion of architectural clock gate elements in the design. By enabling this option, the clocks to various parts of the design will be disabled when the logic they drive is not in use to save power.
-clock_gating true

# byte_parity --- If parity protection on the CCMs is configured, this option is used to enable parity protection on a per-byte basis. Otherwise, parity will be per word basis
-byte_parity false

# prot_pipelined --- Check the box if CCM memories are configured for ECC, and you want single-bit errors to be corrected, written back to memory, and re-fetched. When unchecked, single bit errors are corrected when read from memory, but the offending memory location itself is not corrected with a writeback, no influence on Cache protection
-prot_pipelined true

# cct_test_ena --- When ECC is configured, this option enables automatic generation of error conditions in relevant testbench memories to exercise error detection and correction features
-cct_test_ena false

# err_prot_ehce --- Enabled enhanced ECC architecture for CCM. Instruction fetch with single bit error is not replayed; ecc cac modules are shared to reduce area and timing opt.
-err_prot_ehce false


######## AGU --- com.arc.hardware.AGU.1_0 ########

# Create AGU
-create com.arc.hardware.AGU.1_0 System.CPUisle.ARCv2EM.AGU

# agu_size --- Predefined configurations of modifiers, address 
# pointers and offset registers                   
# <pre>
# 
#         address     address                     
#         pointers    offset regs      modifiers  
#        ----------- --------------- ------------ 
# small:     4           2                 4      
# medium:    8           4                 12     
# large:     12          8                 24     
# </pre>
# 
-agu_size large

# agu_accord --- Enable the accordion stage if operating frequency is critical
-agu_accord true

# agu_wb_depth --- Write buffer depth
-agu_wb_depth 4


######## Bit stream --- com.arc.hardware.Bit_stream.1_0 ########

# Create Bit stream
-create com.arc.hardware.Bit_stream.1_0 "System.CPUisle.ARCv2EM.Bit stream"

######## DCCM --- com.arc.hardware.DCCM.1_0 ########

# Create DCCM
-create com.arc.hardware.DCCM.1_0 System.CPUisle.ARCv2EM.DCCM

# dccm_size --- This defines the size of the Data Closely Coupled Memory (DCCM) in bytes
-dccm_size 524288

# dccm_base --- Sets the initial memory region assignment for DCCM
-dccm_base 8

# dccm_interleave --- Split DCCM into even/odd memory banks.
-dccm_interleave true

# dccm_prot --- Specifies the type of protection built for the DCCM.
-dccm_prot None

# dccm_prot_level --- Specifies the level protection.
-dccm_prot_level Data_Only

# dccm_prot_exceptions --- When the core is configured with ECC or Parity, cause exception generation hardware to be created for uncorrectable errors detected on the DCCM
-dccm_prot_exceptions false

# dccm_sec_lvl --- Specifies the level of secure DCCM.
-dccm_sec_lvl Non_Secure

# dccm_dmi --- This enables external access through a DMI (direct memory interface) port.
-dccm_dmi false


######## DSP --- com.arc.hardware.DSP.1_0 ########

# Create DSP
-create com.arc.hardware.DSP.1_0 System.CPUisle.ARCv2EM.DSP

# dsp_complex --- Enable/disable support for single cycle 16b+16b complex instructions and butterfly operations, else 2-cycle complex instructions only without butterfly support
-dsp_complex true

# dsp_itu --- Enable/disable support for ITU bit-accurate 1 bit fractional shift before accumulation, else 1-bit fractional shift result after accumulation only
-dsp_itu true

# dsp_divsqrt --- Enable/disable support for divide and square root operations: DIV(U), REM(U), SQRT
-dsp_divsqrt radix2

# dsp_accshift --- Select support for accumulator shift operations: no supported, limited shift support only or full shift support and convergent rounding
-dsp_accshift full

# dsp_impl --- The datapath components may be inferred from Verilog for better area or optimized using carry-save components for better timing
-dsp_impl optimized


######## Debug Interface --- com.arc.hardware.Debug_Interface.1_0 ########

# Create Debug Interface
-create com.arc.hardware.Debug_Interface.1_0 "System.CPUisle.ARCv2EM.Debug Interface"

# secure_debug --- This enables secure debug feature
-secure_debug false

# scdbg_aux_unlk --- An internal demo module will be included when enable
-scdbg_aux_unlk false

# dbg_apb_option --- Adds an additional APB debug port alongside the BVCI one
-dbg_apb_option false


######## ICCM0 --- com.arc.hardware.ICCM0.1_0 ########

# Create ICCM0
-create com.arc.hardware.ICCM0.1_0 System.CPUisle.ARCv2EM.ICCM0

# iccm0_size --- This defines the size of ICCM0 in bytes.This ICCM has 0 wait states.
-iccm0_size 524288

# iccm0_base --- Sets the initial memory region assignment for ICCM0
-iccm0_base 0

# iccm0_rom_split --- Split ICCM0 to halves for ROM/RAM regions, with ROM in lower half and RAM in higher half.
-iccm0_rom_split false

# iccm0_wide --- Creates ICCM0 as 64b memory to reduce accesses.
-iccm0_wide true

# iccm0_prot --- Specifies the type of protection built for ICCM0.
-iccm0_prot None

# iccm0_prot_level --- Specifies the level of protection.
-iccm0_prot_level Data_Only

# iccm0_prot_exceptions --- When the core is configured with ECC or Parity, cause exception generation hardware to be created for uncorrectable errors detected on the ICCM0
-iccm0_prot_exceptions false

# iccm0_sec_lvl --- Specifies the level of secure ICCM0.
-iccm0_sec_lvl Non_Secure

# iccm0_dmi --- This enables external access through a DMI (direct memory interface) port.
-iccm0_dmi false


######## Interrupt Controller --- com.arc.hardware.Interrupt_Controller.1_0 ########

# Create Interrupt Controller
-create com.arc.hardware.Interrupt_Controller.1_0 "System.CPUisle.ARCv2EM.Interrupt Controller"

# number_of_interrupts --- This is the total number of interrupts available to the core.  Some interrupts are allocated statically to a specific interrupt line (for example, timer interrupts).  For more information on Interrupt and register-file options, see DesignWare ARCv2 ISA Programmers Reference Manual.
-number_of_interrupts 10

# number_of_levels --- Priority levels in the interrupt controller.
-number_of_levels 2

# external_interrupts --- This is the total number of interrupt pins available for external system components.  This parameter must be less than the total number of interrupts.
-external_interrupts 7

# firq_option --- This enables the fast-interrupts option, (priority level 0 interrupts), which uses an alternate register bank (if configured) instead of saving the context to memory.
-firq_option false


######## Timer 0 --- com.arc.hardware.Timer_0.1_0 ########

# Create Timer 0
-create com.arc.hardware.Timer_0.1_0 "System.CPUisle.ARCv2EM.Timer 0"

# timer_0_int_level --- This sets the interrupt level (and implicitly the priority: level 0 is highest) of timer 0.
-timer_0_int_level 1


######## XY --- com.arc.hardware.XY.1_0 ########

# Create XY
-create com.arc.hardware.XY.1_0 System.CPUisle.ARCv2EM.XY

# xy_config --- XY memory configuration:
# One memory: DCCM only.
# Two memories: DCCM + Y.
# Three memories: DCCM + X + Y.
-xy_config dccm_x_y

# xy_size --- Size of X and Y memories if included.
# X and Y memories both have the same configured size.
-xy_size 65536

# xy_interleave --- Split XY memories into odd/even instances to enable single cycle unaligned access.
-xy_interleave true

# xy_x_base --- Base region for X memory. All accesses to this region will initiate a transfer on the X memory.
-xy_x_base 12

# xy_y_base --- Base region for Y memory. All accesses to this region will initiate a transfer on the Y memory.
-xy_y_base 14


######## XY DMA Controller --- com.arc.hardware.XY_DMA_Controller.1_0 ########

# Create XY DMA Controller
-create com.arc.hardware.XY_DMA_Controller.1_0 "System.CPUisle.ARCv2EM.XY DMA Controller"

# dmac_fifo_depth --- This option specifies the DMA transfer FIFO depth in 32b words.
-dmac_fifo_depth 2

# dmac_int_config --- None: the DMA controller cannot raise an interrupt
# Single-External: single done and single error interrupt signal for all DMA channels, and the interrupt signals are routed to a port at the top of the EM logical hierarchy
# Multiple-External: each DMA channel can be configured to raise separate (per-channel) done and error interrupts, and the interrupt signals are routed to ports at the top of the EM logical hierarchy
# Single-Internal: single done and single error interrupt signals for all DMA channels, and the interrupt signals are internal to the EM core
# Multiple-Internal: each DMA channel can be configured to raise separate (per-channel) done and error interrupts, and the interrupt signals are internal to the EM core
-dmac_int_config Single-Internal

# dmac_separate_error_interrupts --- This specifies whether there is a separate error interrupt per DMA channel, or just one.
-dmac_separate_error_interrupts true

# dmac_mem_if --- This option specifies whether the DMA controller system memory interface is integrated into the existing EM system memory interfaces or has its own interface.
-dmac_mem_if integrated


######## ClkCtrl --- com.arc.hardware.ARCv2MSS.ClkCtrl.1_0 ########

# Create ClkCtrl
-create com.arc.hardware.ARCv2MSS.ClkCtrl.1_0 System.ClkCtrl

# alb_mss_clkctrl_base_addr --- This specifies the clock controller base address in the memory map, divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_clkctrl_base_addr 0xc00

# alb_mss_clkctrl_bypass_mode --- If true then all clock dividers/gaters in the clock controller are bypassed, clock ratio is not supported and the division options/registers are overriden
-alb_mss_clkctrl_bypass_mode false

# alb_mss_sim_timeout_limit --- This specifies the TIMEOUT value for CCT simulation. If you want to disable this TIMEOUT control, set it's value to 0 (by default), otherwise, set the appropriate values according to simulation requirement
-alb_mss_sim_timeout_limit 0


######## Implementation --- com.arc.hardware.implementation.1_0 ########

# Create Implementation
-create com.arc.hardware.implementation.1_0 System.Implementation

# ClockSpeed --- Target clock speed of the system
-clock_speed 200

# DDR2_clk_Ratio --- DDR2 Clock Vs System Clock Ratio
# 2x
# 3x
# 4x
-ddr2_clk_ratio 3x

# ClockSkew --- The clock skew for the system
-clock_skew 0.2

# HoldMargin --- Margin for hold time checks
-hold_margin 0.05

# Floorplan --- Floorplan definition for relative placement of  RAMs (at CPU-level) or the placement of the rams and CPU hard cores (at multicore level)
-floorplan em9d_xyccm

# JTAGFrequency --- Select the frequency of the JTAG clock Tck (in MHz).
# 
# The JTAG clock speed has to be less than 1/2 of the cpu clock otherwise the signals on the BVCI interface are not guaranteed to be valid.
# 
# NOTE: The RTL simulations will work when the JTAG clock frequency is set to half the CPU clock, however this may not be the case when simulating at gate level due to delays on the IO pads.
# 
# The default is set to 10 MHz so that there is no conflict when simulating with an ARCangel3 at 30MHz. (30 > 10*2)
# 
# The speed of simulation can be greatly increased by using a faster JTAG clock, but a dependency will warn if it exceeds 1/2 of the cpu clock.
# 
-jtag_tclk 10

# execution_trace_level --- 
# This traces committed instructions as they execute, and gathers statistics
# visible in the debugger for counting instructions & cycle delays.
# At the "stats" level ony the statistics are gathered and no trace is printed.
# "file" is equivalent to "full", but the results go to a trace .txt file instead.
# 
-execution_trace_level stats

# tb_trace --- 
# Enable instruction execution trace.
# This is available to arc_dev licensees (internal developers) only.
# 
-tb_trace false

# zero_based_arcnum --- 
# In a multicore build, number ARCs from 0.
# If this is not selected, arcs are numbered from 1.
# (This provides the initial value to the arcnum signal.)
# 
-zero_based_arcnum true

# unique_clk --- 
# In a multicore build, each CPU has by default its own unique clk input pin from top-level down to CPU instance.
# Setting this option to false forces the clock net  going to each CPU's clock input pin to be the same,  effectively driving all multicore components from same top-level clock pin
# 
-unique_clk true

# generate_ipxact --- 
# Generate ipxact.xml file describing the CPUisle or archipelago frontier
# 
-generate_ipxact false

# ipxact_relative_path_names --- 
# Use relative path names for Verilog files in the ipxact.
# Otherwise, absolute path names are used.
# 
-ipxact_relative_path_names true

# optional_encryption --- 
# When selected, encrypted RTL output is generated.
# 	
-optional_encryption false

# ignore_encrypt_license --- 
# When selected, pretend the encryption license is missing.  For testing.
# 	
-ignore_encrypt_license false

# ignore_clear_license --- 
# When selected, pretend the cleartest license is missing.  For testing.
# 	
-ignore_clear_license false

# OPTION_require_archipelago --- 
# When selected, force use of archipelago.  This is for testing purposes.
# 	
-require_archipelago false


######## Profiler --- com.arc.hardware.ARCv2MSS.Profiler.1_0 ########

# Create Profiler
-create com.arc.hardware.ARCv2MSS.Profiler.1_0 System.Profiler

# alb_mss_perfctrl_base_addr --- This specifies the profiler base address in the memory map, divided by 4KB i.e. do not specify the lower 12 bits of the address.
-alb_mss_perfctrl_base_addr 0xc_0002


######## SRAMCtrl --- com.arc.hardware.ARCv2MSS.SRAMCtrl.1_0 ########

# Create SRAMCtrl
-create com.arc.hardware.ARCv2MSS.SRAMCtrl.1_0 System.SRAMCtrl

# alb_mss_mem_region_num --- The number of regions supported in SRAMCtrl component
-alb_mss_mem_region_num 1

# alb_mss_mem0_base_addr --- This specifies the base address of memory region 0 in the memory map, divided by 4KB i.e. do no specify the lower 12 bits of the address.
-alb_mss_mem0_base_addr 0

# alb_mss_mem0_size --- This specifies the memory size of memory region 0.
-alb_mss_mem0_size 1MB

# alb_mss_mem0_attr --- This specifies the memory access attribute of memory region 0.
-alb_mss_mem0_attr Read-Write

# alb_mss_mem0_secure --- This specifies the memory secure attribute of memory region 0.
-alb_mss_mem0_secure Non-Secure

# alb_mss_mem0_lat --- This specifies the maximum latency of memory region 0 .
-alb_mss_mem0_lat 0

# alb_mss_mem0_def_lat --- This specifies the latency after reset of memory region 0.
-alb_mss_mem0_def_lat 0

# alb_mss_mem1_base_addr --- This specifies the base address of memory region 1 in the memory map, divided by 4KB i.e. do no specify the lower 12 bits of the address.
-alb_mss_mem1_base_addr 1048576

# alb_mss_mem1_size --- This specifies the memory size of memory region 1.
-alb_mss_mem1_size 1MB

# alb_mss_mem1_attr --- This specifies the memory access attribute of memory region 1.
-alb_mss_mem1_attr Read-Write

# alb_mss_mem1_secure --- This specifies the memory secure attribute of memory region 1.
-alb_mss_mem1_secure Non-Secure

# alb_mss_mem1_lat --- This specifies the maximum latency of memory region 1 .
-alb_mss_mem1_lat 0

# alb_mss_mem1_def_lat --- This specifies the latency after reset of memory region 1.
-alb_mss_mem1_def_lat 0

# alb_mss_mem2_base_addr --- This specifies the base address of memory region 2 in the memory map, divided by 4KB i.e. do no specify the lower 12 bits of the address.
-alb_mss_mem2_base_addr 1048576

# alb_mss_mem2_size --- This specifies the memory size of memory region 2.
-alb_mss_mem2_size 1MB

# alb_mss_mem2_attr --- This specifies the memory access attribute of memory region 2.
-alb_mss_mem2_attr Read-Write

# alb_mss_mem2_secure --- This specifies the memory secure attribute of memory region 2.
-alb_mss_mem2_secure Non-Secure

# alb_mss_mem2_lat --- This specifies the maximum latency of memory region 2 .
-alb_mss_mem2_lat 0

# alb_mss_mem2_def_lat --- This specifies the latency after reset of memory region 2.
-alb_mss_mem2_def_lat 0

# alb_mss_mem3_base_addr --- This specifies the base address of memory region 3 in the memory map, divided by 4KB i.e. do no specify the lower 12 bits of the address.
-alb_mss_mem3_base_addr 1048576

# alb_mss_mem3_size --- This specifies the memory size of memory region 3.
-alb_mss_mem3_size 1MB

# alb_mss_mem3_attr --- This specifies the memory access attribute of memory region 3.
-alb_mss_mem3_attr Read-Write

# alb_mss_mem3_secure --- This specifies the memory secure attribute of memory region 3.
-alb_mss_mem3_secure Non-Secure

# alb_mss_mem3_lat --- This specifies the maximum latency of memory region 3 .
-alb_mss_mem3_lat 0

# alb_mss_mem3_def_lat --- This specifies the latency after reset of memory region 3.
-alb_mss_mem3_def_lat 0

# alb_mss_mem_is_default_slave --- If true then all transactions without destination will be routed here.
-alb_mss_mem_is_default_slave true

# alb_mss_mem_default_space --- This specifies the memory space width of the system.
-alb_mss_mem_default_space 32

# alb_mss_mem_wr_rsp_ahead --- If true then write response of SRAMCtrl is returned ahead at the same cycle of wr_last so that AHB protocol can achieve its best write performance. Notes: It's recommended that this option should only enabled when the master accessing the memory is AHB type and attempts to obtain the best write performance. For AXI protocol, please disable it to avoid the protocol violation
-alb_mss_mem_wr_rsp_ahead false

# alb_mss_mem_conflict_free --- If true then all masters can access the memory simultaneously without confliction. It is especially used in some benchmarking scenarios and not recommended for regular CCT tests
-alb_mss_mem_conflict_free false

# alb_mss_mem_data_width --- This specifies the memory data width
-alb_mss_mem_data_width 64


######## Tool Configuration --- cgen.1_0 ########

# Create Tool Configuration
-create cgen.1_0 "System.Tool Configuration"

# mwdt_version --- Selects the MetaWare version to be used with the TCF file.
# Change from the default to an older or newer toolset version if you want the TCF file to be used with an older or newer version of the MetaWare tools.
-mwdt_version O-2018.06

# code_base_addr --- 
# The base address to assign to the executable code segment in the linker command file when there is no ICCM in the build.  This value is ignored when there is an ICCM.
# 
-code_base_addr 0x0

# data_base_addr --- 
# The base address to assign to the data segment in the linker command file when the data is not being mapped to a DCCM.  This value is ignored when the data segment is mapped to a DCCM, as in that case the base address of the DCCM memory is used.
# 
# A value of 0xffffffff means that the data segment will not be mapped to any specific address.
# 
-data_base_addr 0xffff_ffff

# underscores_in_numbers --- Use underscores in hex numbers to improve readability.
-underscores_in_numbers false

# tcf_rebrand --- Alternate branding of TCF (not used)
-rebrand false


######## XCAM --- com.arc.tools.XCAM.1_0 ########

# Create XCAM
-create com.arc.tools.XCAM.1_0 System.XCAM

# BuildIntegratedModel --- Build an integrated C XCAM model of the ARC IP with a memory subsystem. No memory bus connections are available on this model.
-integrated_model true

# BuildSCModel --- Build a SystemC XCAM model of the ARC IP. Memory bus connections are available to connect peripherals/memories.
-sc_model false

# BuildTLMModel --- Build a SystemC TLM XCAM model of the ARC IP. Memory bus connections are available to connect peripherals/memories.
-tlm_model false

# OptimizeModels --- Optimizing the model produces the fastest run-time model, however, it extends the compilation time considerably.
-optimize_models true

# PipemonLevel --- Level of pipeline tracing.
#       0 = off.
#       1 = display counters in debugger.
#       2 = display counters in debugger and write a pipeline transcript file.
-pipemon_level 1

# PipemonFile --- File in which the pipeline transcript is stored when pipemon_level=2.
-pipemon_file pipemon.log

# DumpVcdAll --- This option causes the XCAM model to dump a vcd waveform file containing all of the signals in the model.
-vtoc_dump_vcd_all false

# CamModelLicenseName --- This option adds the -model-license-name option to the XCAM command line. It's used to generate the CAM models only. It's an empty string by default and is invisible unless there is an arc_dev license present, in which case the option is visible and can be set to the required value.
-cam_model_license_name ""

# InstrumentBvciBus --- This option adds the BVCI bus instrumentation for the models that get created. Counters are generated for every BVCI initiator on the BVCI system bus and calculate for how many cycles each initiator has used the bus for each run.
-instrument_bvci_bus false


]]></string>
  </configuration>
  <configuration name="assembler_defines" filename="core_config.s">
    <string><![CDATA[
.ifndef __core_config_s
	.define __core_config_s, 1
	.define _TOOL_CONFIG_VER, 10071
	.define	core_config_cir_identity,0x00000044
	.define	core_config_cir_identity_chipid,0
	.define	core_config_cir_identity_arcnum,0
	.define	core_config_cir_identity_arcver,68
	.define	core_config_cir_identity_family,4
	.define	core_config_cir_identity_corever,4
	.define	core_config_cir_aux_dccm,0x00800000
	.define	core_config_bcr_bcr_ver,0x00000002
	.define	core_config_bcr_bcr_ver_version,2
	.define	core_config_bcr_vecbase_ac_build,0x00000010
	.define	core_config_bcr_vecbase_ac_build_version,4
	.define	core_config_bcr_vecbase_ac_build_vector_config,0
	.define	core_config_bcr_vecbase_ac_build_addr,0
	.define	core_config_bcr_rf_build,0x00000102
	.define	core_config_bcr_rf_build_version,2
	.define	core_config_bcr_rf_build_p,1
	.define	core_config_bcr_rf_build_e,0
	.define	core_config_bcr_rf_build_r,0
	.define	core_config_bcr_rf_build_b,0
	.define	core_config_bcr_rf_build_d,0
	.define	core_config_bcr_dccm_build,0x00010b04
	.define	core_config_bcr_dccm_build_w,0
	.define	core_config_bcr_dccm_build_cycles,0
	.define	core_config_bcr_dccm_build_interleave,1
	.define	core_config_bcr_dccm_build_size1,0
	.define	core_config_bcr_dccm_build_size0,11
	.define	core_config_bcr_dccm_build_version,4
	.define	core_config_bcr_timer_build,0x00010104
	.define	core_config_bcr_timer_build_sp1,0
	.define	core_config_bcr_timer_build_sp0,0
	.define	core_config_bcr_timer_build_p1,0
	.define	core_config_bcr_timer_build_p0,1
	.define	core_config_bcr_timer_build_st1,0
	.define	core_config_bcr_timer_build_st0,0
	.define	core_config_bcr_timer_build_rtc,0
	.define	core_config_bcr_timer_build_rtsc_ver,1
	.define	core_config_bcr_timer_build_rtsc,0
	.define	core_config_bcr_timer_build_t0,1
	.define	core_config_bcr_timer_build_t1,0
	.define	core_config_bcr_timer_build_version,4
	.define	core_config_bcr_iccm_build,0x00000b04
	.define	core_config_bcr_iccm_build_w0,0
	.define	core_config_bcr_iccm_build_iccm1_size1,0
	.define	core_config_bcr_iccm_build_iccm0_size1,0
	.define	core_config_bcr_iccm_build_iccm1_size0,0
	.define	core_config_bcr_iccm_build_iccm0_size0,11
	.define	core_config_bcr_iccm_build_version,4
	.define	core_config_bcr_xy_build,0x00004620
	.define	core_config_bcr_xy_build_memsize,4
	.define	core_config_bcr_xy_build_interleaved,1
	.define	core_config_bcr_xy_build_config,2
	.define	core_config_bcr_xy_build_version,32
	.define	core_config_bcr_dsp_build,0x00003521
	.define	core_config_bcr_dsp_build_wide,0
	.define	core_config_bcr_dsp_build_itu_pa,1
	.define	core_config_bcr_dsp_build_acc_shift,2
	.define	core_config_bcr_dsp_build_comp,1
	.define	core_config_bcr_dsp_build_divsqrt,1
	.define	core_config_bcr_dsp_build_version,33
	.define	core_config_bcr_multiply_build,0x00022206
	.define	core_config_bcr_multiply_build_version16x16,2
	.define	core_config_bcr_multiply_build_dsp,2
	.define	core_config_bcr_multiply_build_cyc,0
	.define	core_config_bcr_multiply_build_type,2
	.define	core_config_bcr_multiply_build_version32x32,6
	.define	core_config_bcr_swap_build,0x00000003
	.define	core_config_bcr_swap_build_version,3
	.define	core_config_bcr_norm_build,0x00000003
	.define	core_config_bcr_norm_build_version,3
	.define	core_config_bcr_minmax_build,0x00000002
	.define	core_config_bcr_minmax_build_version,2
	.define	core_config_bcr_barrel_build,0x00000303
	.define	core_config_bcr_barrel_build_version,3
	.define	core_config_bcr_barrel_build_shift_option,3
	.define	core_config_bcr_isa_config,0x12427202
	.define	core_config_bcr_isa_config_res1,0
	.define	core_config_bcr_isa_config_d,1
	.define	core_config_bcr_isa_config_res2,0
	.define	core_config_bcr_isa_config_f,0
	.define	core_config_bcr_isa_config_c,2
	.define	core_config_bcr_isa_config_l,0
	.define	core_config_bcr_isa_config_n,1
	.define	core_config_bcr_isa_config_a,0
	.define	core_config_bcr_isa_config_b,0
	.define	core_config_bcr_isa_config_addr_size,2
	.define	core_config_bcr_isa_config_lpc_size,7
	.define	core_config_bcr_isa_config_pc_size,2
	.define	core_config_bcr_isa_config_version,2
	.define	core_config_bcr_bs_build,0x00000002
	.define	core_config_bcr_bs_build_version,2
	.define	core_config_bcr_agu_build,0x01988c02
	.define	core_config_bcr_agu_build_accordian,1
	.define	core_config_bcr_agu_build_wb_size,4
	.define	core_config_bcr_agu_build_num_modifier,24
	.define	core_config_bcr_agu_build_num_offset,8
	.define	core_config_bcr_agu_build_num_addr,12
	.define	core_config_bcr_agu_build_version,2
	.define	core_config_bcr_dmac_build,0x000a1002
	.define	core_config_bcr_dmac_build_int_cfg,1
	.define	core_config_bcr_dmac_build_fifo,1
	.define	core_config_bcr_dmac_build_chan_mem,1
	.define	core_config_bcr_dmac_build_channels,0
	.define	core_config_bcr_dmac_build_version,2
	.define	core_config_bcr_core_config,0x00000001
	.define	core_config_bcr_core_config_turbo_boost,0
	.define	core_config_bcr_core_config_version,1
	.define	core_config_bcr_irq_build,0x01070a01
	.define	core_config_bcr_irq_build_raz,0
	.define	core_config_bcr_irq_build_nmi,0
	.define	core_config_bcr_irq_build_f,0
	.define	core_config_bcr_irq_build_p,1
	.define	core_config_bcr_irq_build_exts,7
	.define	core_config_bcr_irq_build_irqs,10
	.define	core_config_bcr_irq_build_version,1
	.define	core_config_cir_aux_iccm,0x00000000
	.define	core_config_cir_xccm_base,0x00c00000
	.define	core_config_cir_yccm_base,0x00e00000
	.define	core_config_family,4
	.define	core_config_core_version,4
	.define	core_config_family_name,"arcv2em"
	.define	core_config_rgf_num_banks,1
	.define	core_config_rgf_num_wr_ports,2
	.define	core_config_endian,"little"
	.define	core_config_endian_little,1
	.define	core_config_endian_big,0
	.define	core_config_lpc_size,32
	.define	core_config_pc_size,24
	.define	core_config_addr_size,24
	.define	core_config_unaligned,1
	.define	core_config_code_density,1
	.define	core_config_div_rem,"radix2"
	.define	core_config_div_rem_radix2,1
	.define	core_config_swap,1
	.define	core_config_bitscan,1
	.define	core_config_mpy_option,"mpyd"
	.define	core_config_mpy_option_num,8
	.define	core_config_shift_assist,1
	.define	core_config_barrel_shifter,1
	.define	core_config_dsp,1
	.define	core_config_dsp2,1
	.define	core_config_dsp_complex,1
	.define	core_config_dsp_divsqrt,"radix2"
	.define	core_config_dsp_divsqrt_radix2,1
	.define	core_config_dsp_itu,1
	.define	core_config_dsp_accshift,"full"
	.define	core_config_dsp_accshift_full,1
	.define	core_config_agu_large,1
	.define	core_config_agu_wb_depth,4
	.define	core_config_agu_accord,1
	.define	core_config_xy,1
	.define	core_config_xy_config,"dccm_x_y"
	.define	core_config_xy_config_dccm_x_y,1
	.define	core_config_xy_size,65536
	.define	core_config_xy_size_KM,"64K"
	.define	core_config_xy_interleave,1
	.define	core_config_xy_x_base,0xc00000
	.define	core_config_xy_y_base,0xe00000
	.define	core_config_bitstream,1
	.define	core_config_timer0,1
	.define	core_config_timer0_level,1
	.define	core_config_timer0_vector,16
	.define	core_config_interrupts_present,1
	.define	core_config_interrupts_number,10
	.define	core_config_interrupts_priorities,2
	.define	core_config_interrupts_externals,7
	.define	core_config_interrupts,10
	.define	core_config_interrupt_priorities,2
	.define	core_config_ext_interrupts,7
	.define	core_config_interrupts_base,0x0
	.define	core_config_dccm_present,1
	.define	core_config_dccm_size,0x80000
	.define	core_config_dccm_base,0x00800000
	.define	core_config_dccm_interleave,1
	.define	core_config_iccm_present,1
	.define	core_config_iccm0_present,1
	.define	core_config_iccm_size,0x80000
	.define	core_config_iccm0_size,0x80000
	.define	core_config_iccm_base,0x00000000
	.define	core_config_iccm0_base,0x00000000
	.define	core_config_dmac,1
	.define	core_config_dmac_channels,1
	.define	core_config_dmac_registers,1
	.define	core_config_dmac_fifo_depth,2
	.define	core_config_dmac_int_config,"single_internal"
	.define	core_config_clock_speed,200
.endif ; __core_config_s

]]></string>
  </configuration>
  <configuration name="C_defines" filename="core_config.h">
    <string><![CDATA[
#ifndef __core_config_h
	#define __core_config_h  1
	#define _TOOL_CONFIG_VER 10071
	#define	core_config_cir_identity	0x00000044
	#define	core_config_cir_identity_chipid	0
	#define	core_config_cir_identity_arcnum	0
	#define	core_config_cir_identity_arcver	68
	#define	core_config_cir_identity_family	4
	#define	core_config_cir_identity_corever	4
	#define	core_config_cir_aux_dccm	0x00800000
	#define	core_config_bcr_bcr_ver	0x00000002
	#define	core_config_bcr_bcr_ver_version	2
	#define	core_config_bcr_vecbase_ac_build	0x00000010
	#define	core_config_bcr_vecbase_ac_build_version	4
	#define	core_config_bcr_vecbase_ac_build_vector_config	0
	#define	core_config_bcr_vecbase_ac_build_addr	0
	#define	core_config_bcr_rf_build	0x00000102
	#define	core_config_bcr_rf_build_version	2
	#define	core_config_bcr_rf_build_p	1
	#define	core_config_bcr_rf_build_e	0
	#define	core_config_bcr_rf_build_r	0
	#define	core_config_bcr_rf_build_b	0
	#define	core_config_bcr_rf_build_d	0
	#define	core_config_bcr_dccm_build	0x00010b04
	#define	core_config_bcr_dccm_build_w	0
	#define	core_config_bcr_dccm_build_cycles	0
	#define	core_config_bcr_dccm_build_interleave	1
	#define	core_config_bcr_dccm_build_size1	0
	#define	core_config_bcr_dccm_build_size0	11
	#define	core_config_bcr_dccm_build_version	4
	#define	core_config_bcr_timer_build	0x00010104
	#define	core_config_bcr_timer_build_sp1	0
	#define	core_config_bcr_timer_build_sp0	0
	#define	core_config_bcr_timer_build_p1	0
	#define	core_config_bcr_timer_build_p0	1
	#define	core_config_bcr_timer_build_st1	0
	#define	core_config_bcr_timer_build_st0	0
	#define	core_config_bcr_timer_build_rtc	0
	#define	core_config_bcr_timer_build_rtsc_ver	1
	#define	core_config_bcr_timer_build_rtsc	0
	#define	core_config_bcr_timer_build_t0	1
	#define	core_config_bcr_timer_build_t1	0
	#define	core_config_bcr_timer_build_version	4
	#define	core_config_bcr_iccm_build	0x00000b04
	#define	core_config_bcr_iccm_build_w0	0
	#define	core_config_bcr_iccm_build_iccm1_size1	0
	#define	core_config_bcr_iccm_build_iccm0_size1	0
	#define	core_config_bcr_iccm_build_iccm1_size0	0
	#define	core_config_bcr_iccm_build_iccm0_size0	11
	#define	core_config_bcr_iccm_build_version	4
	#define	core_config_bcr_xy_build	0x00004620
	#define	core_config_bcr_xy_build_memsize	4
	#define	core_config_bcr_xy_build_interleaved	1
	#define	core_config_bcr_xy_build_config	2
	#define	core_config_bcr_xy_build_version	32
	#define	core_config_bcr_dsp_build	0x00003521
	#define	core_config_bcr_dsp_build_wide	0
	#define	core_config_bcr_dsp_build_itu_pa	1
	#define	core_config_bcr_dsp_build_acc_shift	2
	#define	core_config_bcr_dsp_build_comp	1
	#define	core_config_bcr_dsp_build_divsqrt	1
	#define	core_config_bcr_dsp_build_version	33
	#define	core_config_bcr_multiply_build	0x00022206
	#define	core_config_bcr_multiply_build_version16x16	2
	#define	core_config_bcr_multiply_build_dsp	2
	#define	core_config_bcr_multiply_build_cyc	0
	#define	core_config_bcr_multiply_build_type	2
	#define	core_config_bcr_multiply_build_version32x32	6
	#define	core_config_bcr_swap_build	0x00000003
	#define	core_config_bcr_swap_build_version	3
	#define	core_config_bcr_norm_build	0x00000003
	#define	core_config_bcr_norm_build_version	3
	#define	core_config_bcr_minmax_build	0x00000002
	#define	core_config_bcr_minmax_build_version	2
	#define	core_config_bcr_barrel_build	0x00000303
	#define	core_config_bcr_barrel_build_version	3
	#define	core_config_bcr_barrel_build_shift_option	3
	#define	core_config_bcr_isa_config	0x12427202
	#define	core_config_bcr_isa_config_res1	0
	#define	core_config_bcr_isa_config_d	1
	#define	core_config_bcr_isa_config_res2	0
	#define	core_config_bcr_isa_config_f	0
	#define	core_config_bcr_isa_config_c	2
	#define	core_config_bcr_isa_config_l	0
	#define	core_config_bcr_isa_config_n	1
	#define	core_config_bcr_isa_config_a	0
	#define	core_config_bcr_isa_config_b	0
	#define	core_config_bcr_isa_config_addr_size	2
	#define	core_config_bcr_isa_config_lpc_size	7
	#define	core_config_bcr_isa_config_pc_size	2
	#define	core_config_bcr_isa_config_version	2
	#define	core_config_bcr_bs_build	0x00000002
	#define	core_config_bcr_bs_build_version	2
	#define	core_config_bcr_agu_build	0x01988c02
	#define	core_config_bcr_agu_build_accordian	1
	#define	core_config_bcr_agu_build_wb_size	4
	#define	core_config_bcr_agu_build_num_modifier	24
	#define	core_config_bcr_agu_build_num_offset	8
	#define	core_config_bcr_agu_build_num_addr	12
	#define	core_config_bcr_agu_build_version	2
	#define	core_config_bcr_dmac_build	0x000a1002
	#define	core_config_bcr_dmac_build_int_cfg	1
	#define	core_config_bcr_dmac_build_fifo	1
	#define	core_config_bcr_dmac_build_chan_mem	1
	#define	core_config_bcr_dmac_build_channels	0
	#define	core_config_bcr_dmac_build_version	2
	#define	core_config_bcr_core_config	0x00000001
	#define	core_config_bcr_core_config_turbo_boost	0
	#define	core_config_bcr_core_config_version	1
	#define	core_config_bcr_irq_build	0x01070a01
	#define	core_config_bcr_irq_build_raz	0
	#define	core_config_bcr_irq_build_nmi	0
	#define	core_config_bcr_irq_build_f	0
	#define	core_config_bcr_irq_build_p	1
	#define	core_config_bcr_irq_build_exts	7
	#define	core_config_bcr_irq_build_irqs	10
	#define	core_config_bcr_irq_build_version	1
	#define	core_config_cir_aux_iccm	0x00000000
	#define	core_config_cir_xccm_base	0x00c00000
	#define	core_config_cir_yccm_base	0x00e00000
	#define	core_config_family	4
	#define	core_config_core_version	4
	#define	core_config_family_name	"arcv2em"
	#define	core_config_rgf_num_banks	1
	#define	core_config_rgf_num_wr_ports	2
	#define	core_config_endian	"little"
	#define	core_config_endian_little	1
	#define	core_config_endian_big	0
	#define	core_config_lpc_size	32
	#define	core_config_pc_size	24
	#define	core_config_addr_size	24
	#define	core_config_unaligned	1
	#define	core_config_code_density	1
	#define	core_config_div_rem	"radix2"
	#define	core_config_div_rem_radix2	1
	#define	core_config_swap	1
	#define	core_config_bitscan	1
	#define	core_config_mpy_option	"mpyd"
	#define	core_config_mpy_option_num	8
	#define	core_config_shift_assist	1
	#define	core_config_barrel_shifter	1
	#define	core_config_dsp	1
	#define	core_config_dsp2	1
	#define	core_config_dsp_complex	1
	#define	core_config_dsp_divsqrt	"radix2"
	#define	core_config_dsp_divsqrt_radix2	1
	#define	core_config_dsp_itu	1
	#define	core_config_dsp_accshift	"full"
	#define	core_config_dsp_accshift_full	1
	#define	core_config_agu_large	1
	#define	core_config_agu_wb_depth	4
	#define	core_config_agu_accord	1
	#define	core_config_xy	1
	#define	core_config_xy_config	"dccm_x_y"
	#define	core_config_xy_config_dccm_x_y	1
	#define	core_config_xy_size	65536
	#define	core_config_xy_size_KM	"64K"
	#define	core_config_xy_interleave	1
	#define	core_config_xy_x_base	0xc00000
	#define	core_config_xy_y_base	0xe00000
	#define	core_config_bitstream	1
	#define	core_config_timer0	1
	#define	core_config_timer0_level	1
	#define	core_config_timer0_vector	16
	#define	core_config_interrupts_present	1
	#define	core_config_interrupts_number	10
	#define	core_config_interrupts_priorities	2
	#define	core_config_interrupts_externals	7
	#define	core_config_interrupts	10
	#define	core_config_interrupt_priorities	2
	#define	core_config_ext_interrupts	7
	#define	core_config_interrupts_base	0x0
	#define	core_config_dccm_present	1
	#define	core_config_dccm_size	0x80000
	#define	core_config_dccm_base	0x00800000
	#define	core_config_dccm_interleave	1
	#define	core_config_iccm_present	1
	#define	core_config_iccm0_present	1
	#define	core_config_iccm_size	0x80000
	#define	core_config_iccm0_size	0x80000
	#define	core_config_iccm_base	0x00000000
	#define	core_config_iccm0_base	0x00000000
	#define	core_config_dmac	1
	#define	core_config_dmac_channels	1
	#define	core_config_dmac_registers	1
	#define	core_config_dmac_fifo_depth	2
	#define	core_config_dmac_int_config	"single_internal"
	#define	core_config_clock_speed	200
#endif /* __core_config_h */

]]></string>
  </configuration>
  <configuration name="core" filename="core.props">
    <string><![CDATA[
	core_config.cir.identity=0x00000044
	core_config.cir.identity.chipid=0
	core_config.cir.identity.arcnum=0
	core_config.cir.identity.arcver=68
	core_config.cir.identity.family=4
	core_config.cir.identity.corever=4
	core_config.cir.aux_dccm=0x00800000
	core_config.bcr.bcr_ver=0x00000002
	core_config.bcr.bcr_ver.version=2
	core_config.bcr.vecbase_ac_build=0x00000010
	core_config.bcr.vecbase_ac_build.version=4
	core_config.bcr.vecbase_ac_build.vector_config=0
	core_config.bcr.vecbase_ac_build.addr=0
	core_config.bcr.rf_build=0x00000102
	core_config.bcr.rf_build.version=2
	core_config.bcr.rf_build.p=1
	core_config.bcr.rf_build.e=0
	core_config.bcr.rf_build.r=0
	core_config.bcr.rf_build.b=0
	core_config.bcr.rf_build.d=0
	core_config.bcr.dccm_build=0x00010b04
	core_config.bcr.dccm_build.w=0
	core_config.bcr.dccm_build.cycles=0
	core_config.bcr.dccm_build.interleave=1
	core_config.bcr.dccm_build.size1=0
	core_config.bcr.dccm_build.size0=11
	core_config.bcr.dccm_build.version=4
	core_config.bcr.timer_build=0x00010104
	core_config.bcr.timer_build.sp1=0
	core_config.bcr.timer_build.sp0=0
	core_config.bcr.timer_build.p1=0
	core_config.bcr.timer_build.p0=1
	core_config.bcr.timer_build.st1=0
	core_config.bcr.timer_build.st0=0
	core_config.bcr.timer_build.rtc=0
	core_config.bcr.timer_build.rtsc_ver=1
	core_config.bcr.timer_build.rtsc=0
	core_config.bcr.timer_build.t0=1
	core_config.bcr.timer_build.t1=0
	core_config.bcr.timer_build.version=4
	core_config.bcr.iccm_build=0x00000b04
	core_config.bcr.iccm_build.w0=0
	core_config.bcr.iccm_build.iccm1_size1=0
	core_config.bcr.iccm_build.iccm0_size1=0
	core_config.bcr.iccm_build.iccm1_size0=0
	core_config.bcr.iccm_build.iccm0_size0=11
	core_config.bcr.iccm_build.version=4
	core_config.bcr.xy_build=0x00004620
	core_config.bcr.xy_build.memsize=4
	core_config.bcr.xy_build.interleaved=1
	core_config.bcr.xy_build.config=2
	core_config.bcr.xy_build.version=32
	core_config.bcr.dsp_build=0x00003521
	core_config.bcr.dsp_build.wide=0
	core_config.bcr.dsp_build.itu_pa=1
	core_config.bcr.dsp_build.acc_shift=2
	core_config.bcr.dsp_build.comp=1
	core_config.bcr.dsp_build.divsqrt=1
	core_config.bcr.dsp_build.version=33
	core_config.bcr.multiply_build=0x00022206
	core_config.bcr.multiply_build.version16x16=2
	core_config.bcr.multiply_build.dsp=2
	core_config.bcr.multiply_build.cyc=0
	core_config.bcr.multiply_build.type=2
	core_config.bcr.multiply_build.version32x32=6
	core_config.bcr.swap_build=0x00000003
	core_config.bcr.swap_build.version=3
	core_config.bcr.norm_build=0x00000003
	core_config.bcr.norm_build.version=3
	core_config.bcr.minmax_build=0x00000002
	core_config.bcr.minmax_build.version=2
	core_config.bcr.barrel_build=0x00000303
	core_config.bcr.barrel_build.version=3
	core_config.bcr.barrel_build.shift_option=3
	core_config.bcr.isa_config=0x12427202
	core_config.bcr.isa_config.res1=0
	core_config.bcr.isa_config.d=1
	core_config.bcr.isa_config.res2=0
	core_config.bcr.isa_config.f=0
	core_config.bcr.isa_config.c=2
	core_config.bcr.isa_config.l=0
	core_config.bcr.isa_config.n=1
	core_config.bcr.isa_config.a=0
	core_config.bcr.isa_config.b=0
	core_config.bcr.isa_config.addr_size=2
	core_config.bcr.isa_config.lpc_size=7
	core_config.bcr.isa_config.pc_size=2
	core_config.bcr.isa_config.version=2
	core_config.bcr.bs_build=0x00000002
	core_config.bcr.bs_build.version=2
	core_config.bcr.agu_build=0x01988c02
	core_config.bcr.agu_build.accordian=1
	core_config.bcr.agu_build.wb_size=4
	core_config.bcr.agu_build.num_modifier=24
	core_config.bcr.agu_build.num_offset=8
	core_config.bcr.agu_build.num_addr=12
	core_config.bcr.agu_build.version=2
	core_config.bcr.dmac_build=0x000a1002
	core_config.bcr.dmac_build.int_cfg=1
	core_config.bcr.dmac_build.fifo=1
	core_config.bcr.dmac_build.chan_mem=1
	core_config.bcr.dmac_build.channels=0
	core_config.bcr.dmac_build.version=2
	core_config.bcr.core_config=0x00000001
	core_config.bcr.core_config.turbo_boost=0
	core_config.bcr.core_config.version=1
	core_config.bcr.irq_build=0x01070a01
	core_config.bcr.irq_build.raz=0
	core_config.bcr.irq_build.nmi=0
	core_config.bcr.irq_build.f=0
	core_config.bcr.irq_build.p=1
	core_config.bcr.irq_build.exts=7
	core_config.bcr.irq_build.irqs=10
	core_config.bcr.irq_build.version=1
	core_config.cir.aux_iccm=0x00000000
	core_config.cir.xccm_base=0x00c00000
	core_config.cir.yccm_base=0x00e00000
	core_config.family=4
	core_config.core_version=4
	core_config.family_name=arcv2em
	core_config.rgf_num_banks=1
	core_config.rgf_num_wr_ports=2
	core_config.endian=little
	core_config.endian_little=1
	core_config.endian_big=0
	core_config.lpc_size=32
	core_config.pc_size=24
	core_config.addr_size=24
	core_config.unaligned=1
	core_config.code_density=1
	core_config.div_rem=radix2
	core_config.div_rem_radix2=1
	core_config.swap=1
	core_config.bitscan=1
	core_config.mpy_option=mpyd
	core_config.mpy_option_num=8
	core_config.shift_assist=1
	core_config.barrel_shifter=1
	core_config.dsp=1
	core_config.dsp2=1
	core_config.dsp_complex=1
	core_config.dsp_divsqrt=radix2
	core_config.dsp_divsqrt_radix2=1
	core_config.dsp_itu=1
	core_config.dsp_accshift=full
	core_config.dsp_accshift_full=1
	core_config.agu_large=1
	core_config.agu_wb_depth=4
	core_config.agu_accord=1
	core_config.xy=1
	core_config.xy_config=dccm_x_y
	core_config.xy_config_dccm_x_y=1
	core_config.xy_size=64K
	core_config.xy_interleave=1
	core_config.xy_x_base=0xc00000
	core_config.xy_y_base=0xe00000
	core_config.bitstream=1
	core_config.timer0=1
	core_config.timer0_level=1
	core_config.timer0.vector=16
	core_config.interrupts.present=1
	core_config.interrupts.number=10
	core_config.interrupts.priorities=2
	core_config.interrupts.externals=7
	core_config.interrupts=10
	core_config.interrupt_priorities=2
	core_config.ext_interrupts=7
	core_config.interrupts.base=0x0
	core_config.dccm.present=1
	core_config.dccm_size=0x80000
	core_config.dccm_base=0x00800000
	core_config.dccm_interleave=1
	core_config.iccm.present=1
	core_config.iccm0.present=1
	core_config.iccm.size=0x80000
	core_config.iccm0.size=0x80000
	core_config.iccm.base=0x00000000
	core_config.iccm0.base=0x00000000
	core_config.dmac=1
	core_config.dmac_channels=1
	core_config.dmac_registers=1
	core_config.dmac_fifo_depth=2
	core_config.dmac_int_config=single_internal
	core_config.clock_speed=200
]]></string>
  </configuration>
  <configuration name="gcc_compiler" filename="gcc.arg">
    <string><![CDATA[
	-mcpu=em4_dmips
	-mlittle-endian
	-mcode-density
	-mdiv-rem
	-mswap
	-mnorm
	-mmpy-option=6
	-mbarrel-shifter
]]></string>
  </configuration>
  <configuration name="linker_command_file" filename="link_cmd.txt">
    <string><![CDATA[
# SYSTEM memory regions indicate where external memory might be located.
#   The TCF has no specific knowledge of whether SYSTEM regions contain 
#   external memory or not.
# CCMWRAP memory regions indicate unusable portions of the address space
#   due to CCM memory wrapping into upper addresses beyond its size

MEMORY {
    ICCM0   : ORIGIN = 0x00000000, LENGTH = 0x00080000
#   CCMWRAP0: ORIGIN = 0x00080000, LENGTH = 0x00080000
#   SYSTEM0 : ORIGIN = 0x00100000, LENGTH = 0x00700000
    DCCM    : ORIGIN = 0x00800000, LENGTH = 0x00080000
#   CCMWRAP1: ORIGIN = 0x00880000, LENGTH = 0x00080000
#   SYSTEM1 : ORIGIN = 0x00900000, LENGTH = 0x00300000
    XCCM    : ORIGIN = 0x00c00000, LENGTH = 0x00010000
#   CCMWRAP2: ORIGIN = 0x00c10000, LENGTH = 0x000f0000
#   SYSTEM2 : ORIGIN = 0x00d00000, LENGTH = 0x00100000
    YCCM    : ORIGIN = 0x00e00000, LENGTH = 0x00010000
#   CCMWRAP3: ORIGIN = 0x00e10000, LENGTH = 0x000f0000
#   SYSTEM3 : ORIGIN = 0x00f00000, LENGTH = 0x00100000
    }
SECTIONS {
    GROUP BLOCK(4): {
        .vectors (TEXT) SIZE(DEFINED _IVTSIZE?_IVTSIZE:132): {}
	.text? : { *('.text$crt*') }
        * (TEXT): {}
    	* (LIT): {}
	} > ICCM0

    GROUP BLOCK(4): {
	/* _SDA_BASE_ computed implicitly */
        .sdata?: {}
        .sbss?: {}
        * (DATA): {}
        * (BSS): {}
       .stack ALIGN(4) SIZE(DEFINED _STACKSIZE?_STACKSIZE:65536): {}
       .heap? ALIGN(4) SIZE(DEFINED _HEAPSIZE?_HEAPSIZE:0): {}
	} > DCCM
    GROUP BLOCK(4): {
        .Xdata? : {}
        } > XCCM
    GROUP BLOCK(4): {
        .Ydata? : {}
        } > YCCM
    }

]]></string>
  </configuration>
  <configuration name="gnu_linker_command_file" filename="memory.x">
    <string><![CDATA[
MEMORY {
    ICCM0    : ORIGIN = 0x00000000, LENGTH = 0x00080000
    CCMWRAP0 : ORIGIN = 0x00080000, LENGTH = 0x00080000
    SYSTEM0  : ORIGIN = 0x00100000, LENGTH = 0x00700000
    DCCM     : ORIGIN = 0x00800000, LENGTH = 0x00080000
    CCMWRAP1 : ORIGIN = 0x00880000, LENGTH = 0x00080000
    SYSTEM1  : ORIGIN = 0x00900000, LENGTH = 0x00300000
    XCCM     : ORIGIN = 0x00c00000, LENGTH = 0x00010000
    CCMWRAP2 : ORIGIN = 0x00c10000, LENGTH = 0x000f0000
    SYSTEM2  : ORIGIN = 0x00d00000, LENGTH = 0x00100000
    YCCM     : ORIGIN = 0x00e00000, LENGTH = 0x00010000
    CCMWRAP3 : ORIGIN = 0x00e10000, LENGTH = 0x000f0000
    SYSTEM3  : ORIGIN = 0x00f00000, LENGTH = 0x00100000
    }
REGION_ALIAS("startup", ICCM0)
REGION_ALIAS("text", ICCM0)
REGION_ALIAS("data", DCCM)
REGION_ALIAS("sdata", DCCM)
PROVIDE (__stack_top = (0x0087ffff & -4 ));
PROVIDE (__end_heap =  (0x0087ffff ));
]]></string>
  </configuration>
  <configuration name="apex_header" filename="apexextensions.h">
    <string><![CDATA[

/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for apex components 
 */

#ifndef _apexextensions_H_
#define _apexextensions_H_



#endif


]]></string>
  </configuration>
  <configuration name="apex_assembly" filename="apexextensions.s">
    <string><![CDATA[

; Assembler directives for eia extensions in this design

]]></string>
  </configuration>
  <configuration name="system_memmap" filename="alb_mss_fab_system_memmap.h">
    <string><![CDATA[
/*************************************************************************/
/**                                                                     **/
/** Copyright (C) 2016-2017 Synopsys, Inc.                              **/
/** All Rights Reserved.                                                **/
/**                                                                     **/
/** This Synopsys software and all associated documentation are         **/
/** proprietary to Synopsys, Inc. and may only be used pursuant to the  **/
/** terms and conditions of a written license agreement with Synopsys,  **/
/** Inc. All other use, reproduction, modification, or distribution of  **/
/** this Synopsys software or the associated documentation is strictly  **/
/** prohibited.                                                         **/
/**                                                                     **/
/*************************************************************************/


/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for System Memory
 */
#ifndef  _alb_mss_fab_system_memmap_H_
#define  _alb_mss_fab_system_memmap_H_
// System memory map
#define MSS_CLKCTRL_0_BASE 0xc00000
#define MSS_CLKCTRL_0_SIZE 0x1000
#define MSS_PERFCTRL_0_BASE 0xc0002000
#define MSS_PERFCTRL_0_SIZE 0x2000
#define MSS_MEM_0_BASE 0x0000
#define MSS_MEM_0_SIZE 0x100000000

// CCM system address with the specific name

#define HAS_DEFAULT_SLAVE 1
#endif
]]></string>
  </configuration>
</config_list>

